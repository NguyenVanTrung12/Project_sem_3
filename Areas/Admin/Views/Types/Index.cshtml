@model X.PagedList.IPagedList<Project_sem_3.Models.Type>
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Type List";
    Layout = "_Admin";
}

<div class="d-flex flex-wrap align-items-center justify-content-between gap-3 mb-24">
    <h6 class="fw-semibold mb-0">Type Grid</h6>
    <ul class="d-flex align-items-center gap-2">
        <li class="fw-medium">
            <a href="index.html" class="d-flex align-items-center gap-1 hover-text-primary">
                <iconify-icon icon="solar:home-smile-angle-outline" class="icon text-lg"></iconify-icon>
                Dashboard
            </a>
        </li>
        <li>-</li>
        <li class="fw-medium">Type Grid</li>
    </ul>
</div>

<div class="card h-100 p-0 radius-12">
    <div
        class="card-header border-bottom bg-base py-16 px-24 d-flex align-items-center flex-wrap gap-3 justify-content-between">
        <div class="d-flex align-items-center flex-wrap gap-3">
            <form id="filterForm" method="get" class="d-flex align-items-center gap-2 navbar-search">
                <!-- Search box -->
                <div class="position-relative">
                    <input id="searchInput" type="text" name="searchString" value="@ViewBag.CurrentSearch"
                        class="bg-base h-40-px w-auto ps-10 pe-10 radius-12" placeholder="Search..." />
                </div>

                <!-- Status filter -->
                <select name="status" class="form-select">
                    <option value="">All Status</option>
                    @if (ViewBag.CurrentStatus == 1)
                    {
                        <option value="1" selected>Active</option>
                        <option value="0">Inactive</option>
                    }
                    else if (ViewBag.CurrentStatus == 0)
                    {
                        <option value="1">Acctive</option>
                        <option value="0" selected>Inactive</option>
                    }
                    else
                    {
                        <option value="1">Active</option>
                        <option value="0">Inactive</option>
                    }
                </select>
            </form>
        </div>
        <a asp-action="Create" asp-controller="Types"
            class="btn btn-primary text-sm btn-sm px-12 py-12 radius-8 d-flex align-items-center gap-2">
            <iconify-icon icon="ic:baseline-plus" class="icon text-xl line-height-1"></iconify-icon>
            Add New Type
        </a>
    </div>

    <div class="card-body p-24">
        <div class="table-responsive scroll-sm">
        @if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}

            <table class="table bordered-table sm-table mb-0">
                <thead>
                    <tr>
                        <th scope="col">
                            <div class="d-flex align-items-center gap-10">
                                <div class="form-check style-check d-flex align-items-center">
                                    <input class="form-check-input radius-4 border input-form-dark" type="checkbox"
                                        id="selectAll" />
                                </div>
                                ID
                            </div>
                        </th>
                        <th scope="col">Type Name</th>
                        <th scope="col" class="text-center">Order Of Number
                        <th scope="col" class="text-center">Status</th></th>
                        <th scope="col" class="text-center">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <div class="d-flex align-items-center gap-10">
                                    <div class="form-check style-check d-flex align-items-center">
                                        <input class="form-check-input radius-4 border border-neutral-400"
                                            type="checkbox" />
                                    </div>
                                    @item.Id
                                </div>
                            </td>
                            <td>@item.TypeName</td>
                            <td class="text-center">@item.Ord</td>
                            <td class="text-center">
                                <span
                                    class="@(item.Status == 1 ? "bg-success-focus text-success-600 border border-success-main" : "bg-danger-focus text-danger-600 border border-danger-main") px-24 py-4 radius-4 fw-medium text-sm">
                                    @(item.Status == 1 ? "Active" : "Inactive")
                                </span>
                            </td>

                            @* <td class="text-center">@item.Subject?.SubjectName</td>
                            <td class="text-center">@item.Type?.TypeName</td> *@
                            <td class="text-center">
                                <div class="d-flex align-items-center gap-10 justify-content-center">
                                    <a asp-action="Edit" asp-route-id="@item.Id"
                                        class="bg-success-focus text-success-600 bg-hover-success-200 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle">
                                        <iconify-icon icon="lucide:edit" class="menu-icon"></iconify-icon>
                                    </a>
                                    <form asp-action="Delete" asp-route-id="@item.Id" method="post"
                                        onsubmit="return confirm('⚠️ Are you sure you want to delete this item?');"
                                        style="display:inline;">
                                        @Html.AntiForgeryToken()
                                        <button type="submit"
                                            class="remove-item-btn bg-danger-focus bg-hover-danger-200 text-danger-600 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle"
                                            title="Delete">
                                            <iconify-icon icon="fluent:delete-24-regular" class="menu-icon"></iconify-icon>
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <!-- Pagination -->
        <div class="d-flex justify-content-between align-items-center mt-3 flex-wrap gap-2">
            <span>Page @Model.PageNumber / @Model.PageCount (Total: @Model.TotalItemCount items)</span>
            <div>
                @Html.PagedListPager(Model, 
                    page => Url.Action("Index", new { page, searchString = ViewBag.CurrentSearch, status = ViewBag.CurrentStatus }),
                    new PagedListRenderOptions
                    {
                        UlElementClasses = new[] { "pagination", "d-flex", "flex-wrap", "gap-2" },
                        LiElementClasses = new[] { "page-item" },
                        PageClasses = new[] { "page-link", "radius-8", "border-0", "bg-neutral-200", "text-secondary-light", "fw-semibold" },
                        ActiveLiElementClass = "active bg-primary-600 text-white",
                        ContainerDivClasses = new[] { "d-flex", "justify-content-center" },
                        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                        DisplayLinkToLastPage = PagedListDisplayMode.Always,
                        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                        DisplayLinkToNextPage = PagedListDisplayMode.Always,
                        LinkToFirstPageFormat = "«",
                        LinkToPreviousPageFormat = "‹",
                        LinkToNextPageFormat = "›",
                        LinkToLastPageFormat = "»",
                        MaximumPageNumbersToDisplay = 5
                    })
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        const form = document.getElementById("filterForm");
        const searchInput = document.getElementById("searchInput");
        const statusSelect = form.querySelector("select[name='status']");

        // Submit when status changes
        statusSelect.addEventListener("change", () => form.submit());

        // Debounced submit when typing into search box
        let timeout;
        searchInput.addEventListener("input", () => {
            clearTimeout(timeout);
            timeout = setTimeout(() => form.submit(), 500);
        });
    </script>
}